---
 - name: Install Packages
   yum:
     name: "{{ item }}"
     state: latest
   with_items:
     - httpd
     - mod_dav_svn
     - subversion

 - name: Create SVN Directory
   file:
     name: "{{ item }}"
     state: directory
   with_items:
     - "{{ svn_dir }}"
     - "{{ web_dir }}"

 - name: Configure default httpd
   template:
     src: "httpd.conf.j2"
     dest: "/etc/httpd/conf/httpd.conf"  

 - name: Configure SVN Httpd  
   template:
     src: "svn.conf.j2"
     dest: "{{ httpd_conf_dir }}/svn.conf"

 - name: start httpd
   systemd: name=httpd enabled=yes state=started

 - name: Unarchive iF.SVNAdmin file that needs to be download
   unarchive:
     src: "{{ svnadmin_url }}"
     dest: "{{ tempdir }}"
     remote_src: yes
     owner: "{{ nginx_user }}"
     group: "{{ nginx_user }}"
  
 - name: Copy php file
   copy:
     src: "{{ item }}"
     dest: "{{ tempdir }}/iF.SVNAdmin-stable-1.6.2/{{ svnadmin_file_path }}/{{ item }}"
     owner: "{{ nginx_user }}"
     group: "{{ nginx_user }}"
   with_items:
     - "IF_SVNAdminC.class.php"
     - "IF_SVNAuthFileC.class.php"

 - name: Sync Code  
   synchronize:
     src: "{{ tempdir }}/iF.SVNAdmin-stable-1.6.2/"
     dest: "{{ web_dir }}/{{ svnadmin_domain }}"
   delegate_to: "{{ inventory_hostname }}"

 - name: Check Nginx Start
   shell: "netstat -ntlp|grep 80"
   register: status
   ignore_errors: true

 - name: Start Nginx If Not Start
   shell: "{{ nginx_basedir }}/sbin/nginx"
   when: status.rc != 0

 - name: Configure iF.SVNAdmin nginx 
   template:
     src: "svnadmin.conf.j2"
     dest: "{{ nginx_conf_dir }}/{{ svnadmin_domain }}.conf"

 - name: Configure svn nginx
   template:
     src: "svn_nginx.conf.j2"
     dest: "{{ nginx_conf_dir }}/{{ svn_domain }}.conf"
   notify:
     - reload nginx
 
 - name: copy the iF.SVNAdmin php template
   template:
    src: "php.conf.j2"
    dest: "{{ php_conf_dir }}/{{ svnadmin_domain }}.conf"

 - name: start php program
   shell: "{{ php_bin_dir }}/php-fpm > /dev/null 2>&1"
   register: result
   ignore_errors: True

 - name: restart php program
   shell: "kill -USR2 `ps aux|grep php|grep master|grep -v grep|awk '{print $2}'`"
   when: result.rc != 0
...
