input {
    redis {
        batch_count => 1000
        host => "{{ redis_host }}"
        port => {{ redis_port }}
        password => "{{ redis_passwd }}"
        db => 0
        key => "beats"
        data_type => "list"
        timeout => 5
    }
}

filter {
    grok {
        patterns_dir => ["patterns"]
        match => { "message" => "%{NGINX_ACCESS}"}
        overwrite => [ "host" ]
        remove_field => [ "message" , "source" , "offset" , "input_type" ]
    }

    mutate {
        convert => { "status" => "integer" }
        convert => { "body_bytes_sent" => "integer" }
        convert => { "request_length" => "integer" }
        convert => { "request_time" => "float" }
        convert => { "upstream_status" => "integer" }
        convert => { "upstream_response_time" => "float" }
    }
    
    if [http_x_forwarded_for] == "-" {
        mutate {
            add_field => { "client_ip" => "%{remote_addr}"}
        }
    } else {
        mutate {
            split => { "http_x_forwarded_for" => "," }
            add_field => { "client_ip" => "%{[http_x_forwarded_for][0]}"}
        }
    }
    
    date {
        match => [ "time_local" , "dd/MMM/yyyy:HH:mm:ss Z" ]
    }
    
    geoip {
        source => "client_ip"
    }
    
    useragent {
        source => "http_user_agent"
        target => "user_agent"
    }
}

output {
    elasticsearch {
        hosts => ["{{ es_host }}:{{ es_port }}"]
        index => "logstash-%{type}-%{+YYYY.MM.dd}"
        flush_size => 20000
        idle_flush_time => 10
    }
    #stdout { codec => rubydebug }
}
